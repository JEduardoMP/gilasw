{"ast":null,"code":"var _jsxFileName = \"/Users/joseeduardomarquezperez/Desktop/practicas/RetoReact/src/Components/DataFetcher.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport '../App.css';\nimport { fetchData } from '../Apis/FetchApi';\nimport { useStyle } from '../Context/styleContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataFetcher = () => {\n  _s();\n  const context = useStyle();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dark, setDark] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(context);\n  const fetchDataFromApi = useCallback(async () => {\n    try {\n      const result = await fetchData();\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Unexpected error occurred');\n      }\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchDataFromApi();\n  }, [fetchDataFromApi]);\n  const toggleDarkMode = () => {\n    setDark(!dark);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${dark ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: dark ? 'Ligth theme' : 'Dark Theme'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Element \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.body\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetcher, \"FVT41waQDmTRDB0YyTeLKi0hRVM=\", false, function () {\n  return [useStyle];\n});\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["useCallback","useEffect","useState","fetchData","useStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","DataFetcher","_s","context","data","setData","loading","setLoading","dark","setDark","error","setError","console","log","fetchDataFromApi","result","err","Error","message","toggleDarkMode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","item","id","title","body","_c","$RefreshReg$"],"sources":["/Users/joseeduardomarquezperez/Desktop/practicas/RetoReact/src/Components/DataFetcher.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport '../App.css';\nimport { fetchData, Data } from '../Apis/FetchApi';\nimport { useStyle } from '../Context/styleContext';\nconst DataFetcher = () => {\n  const context = useStyle();\n  const [data, setData] = useState<Data[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [dark, setDark] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  console.log(context);\n\n  const fetchDataFromApi = useCallback(async () => {\n    try {\n      const result = await fetchData();\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Unexpected error occurred');\n      }\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchDataFromApi();\n  }, [fetchDataFromApi]);\n\n  const toggleDarkMode = () => {\n    setDark(!dark);\n  };\n\n  if (loading) {\n    return <p>Cargando...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n  return (\n    <div className={`App ${dark ? 'dark-mode' : ''}`}>\n      <h1>App fetcher</h1>\n      <button onClick={toggleDarkMode}>\n        {dark ? 'Ligth theme' : 'Dark Theme'}\n      </button>\n\n      {data.map((item) => (\n        <>\n          <p>Element {item.id}</p>\n          <p>Title</p>\n          <p key={item.id}>{item.title}</p>\n          <p>Body</p>\n          <p key={item.id}>{item.body}</p>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default DataFetcher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}