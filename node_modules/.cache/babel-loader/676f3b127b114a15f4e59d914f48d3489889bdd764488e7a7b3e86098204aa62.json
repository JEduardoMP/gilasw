{"ast":null,"code":"var _jsxFileName = \"/Users/joseeduardomarquezperez/Desktop/practicas/RetoReact/src/Components/DataFetcher.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { fetchData } from '../Apis/FetchApi';\nimport { useStyle } from '../Context/styleContext';\nimport { DispatchStyleContext } from '../Constants/styleContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetcher = () => {\n  _s();\n  const {\n    TOGGLE\n  } = DispatchStyleContext;\n  const {\n    state: {\n      dark\n    },\n    dispatch\n  } = useStyle();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchDataFromApi = useCallback(async () => {\n    try {\n      const result = await fetchData();\n      console.log(result);\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Unexpected error occurred');\n      }\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchDataFromApi();\n  }, [fetchDataFromApi]);\n  const toggleDarkMode = () => {\n    dispatch({\n      type: TOGGLE\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${dark ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: dark ? 'Ligth theme' : 'Dark Theme'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Element \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetcher, \"g5vtTqACyk6YP2Tl36AMkcbOQFQ=\", false, function () {\n  return [useStyle];\n});\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useState","fetchData","useStyle","DispatchStyleContext","jsxDEV","_jsxDEV","DataFetcher","_s","TOGGLE","state","dark","dispatch","data","setData","loading","setLoading","error","setError","fetchDataFromApi","result","console","log","err","Error","message","toggleDarkMode","type","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","item","id","title","body","_c","$RefreshReg$"],"sources":["/Users/joseeduardomarquezperez/Desktop/practicas/RetoReact/src/Components/DataFetcher.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useState } from 'react';\nimport { fetchData, Data } from '../Apis/FetchApi';\nimport { useStyle } from '../Context/styleContext';\nimport { DispatchStyleContext } from '../Constants/styleContext';\n\nconst DataFetcher = () => {\n  const { TOGGLE } = DispatchStyleContext;\n  const {\n    state: { dark },\n    dispatch,\n  } = useStyle();\n  const [data, setData] = useState<Data[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchDataFromApi = useCallback(async () => {\n    try {\n      const result = await fetchData();\n      console.log(result);\n      setData(result);\n      setLoading(false);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Unexpected error occurred');\n      }\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchDataFromApi();\n  }, [fetchDataFromApi]);\n\n  const toggleDarkMode = () => {\n    dispatch({ type: TOGGLE });\n  };\n\n  if (loading) {\n    return <p>Cargando...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n  return (\n    <div className={`App ${dark ? 'dark-mode' : ''}`}>\n      <h1>App fetcher</h1>\n      <button onClick={toggleDarkMode}>\n        {dark ? 'Ligth theme' : 'Dark Theme'}\n      </button>\n\n      {data.map((item) => (\n        <Fragment key={item.title}>\n          <p>Element {item.id}</p>\n          <p>Title</p>\n          <p>{item.title}</p>\n          <p>Body</p>\n          <p>{item.body}</p>\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default DataFetcher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}